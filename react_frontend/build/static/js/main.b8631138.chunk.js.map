{"version":3,"sources":["App.tsx","index.tsx"],"names":["AudioPlayer","rawLocationSearch","useLocation","search","locationSearch","slice","length","React","useState","errored","setErrored","endpoint","URLSearchParams","get","src","autoPlay","controls","onError","error","console","log","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAmBA,SAASA,IACP,IAAMC,EAAoBC,cAAcC,OAClCC,EAAiBH,EAAkBI,QAAQJ,EAAkBK,OAAO,IAFtD,EAIUC,IAAMC,UAAS,GAJzB,mBAIbC,EAJa,KAIJC,EAJI,KAMpB,GAAGD,EACD,OAAO,wDAQT,IACE,IAGME,EAAW,wDAHH,IAAIC,gBAAiBR,GACjBS,IAAI,OAItB,OAAO,cAAC,IAAD,CACLC,IAAKH,EACLI,UAAQ,EACRC,UAAQ,EACRC,QAfuB,SAACC,GAC1BC,QAAQC,IAAI,UAAWF,GACvBR,GAAW,MAgBb,MAAMQ,GAGJ,OAFAC,QAAQC,IAAI,UAAWF,GACvBR,GAAW,GACJ,yDAKIW,MAjDf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACA,cAAC,IAAD,UACE,cAACtB,EAAD,WCLRuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b8631138.chunk.js","sourcesContent":["import React, { ErrorInfo } from 'react';\nimport './App.css';\nimport ReactAudioPlayer from 'react-audio-player';\nimport {BrowserRouter as Router, useLocation} from 'react-router-dom'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">   \n      <Router>\n        <AudioPlayer/>        \n      </Router>      \n      </header>\n    </div>\n  );\n}\n\n\nfunction AudioPlayer(){\n  const rawLocationSearch = useLocation().search;\n  const locationSearch = rawLocationSearch.slice(-(rawLocationSearch.length-1));\n\n  const [errored, setErrored] = React.useState(false);\n\n  if(errored){\n    return <h1>Unable to load snippet</h1>\n  }\n\n  const onAudioPlayerError = (error: any)=>{\n    console.log(\"Error: \", error);\n    setErrored(true);\n  }\n  \n  try{\n    const query = new URLSearchParams((locationSearch));\n    const val = query.get('val');    \n      \n    const endpoint = 'https://letsusespeakup.com/backend/open/snippets?val=' + val;\n  \n    return(<ReactAudioPlayer    \n      src={endpoint}\n      autoPlay\n      controls\n      onError={onAudioPlayerError}\n    />)\n  }\n  catch(error){    \n    console.log(\"ERROR: \", error);\n    setErrored(true);\n    return <h1>Unable to load snippet</h1>\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}